{"ast":null,"code":"var _jsxFileName = \"C:\\\\Uni Assignments\\\\L6\\\\S2\\\\AgileTeamDev\\\\AgileTeamDev\\\\frontend\\\\nestcafe\\\\src\\\\pages\\\\timeline.js\";\nimport React from 'react';\nimport { Container, Table, Badge } from 'react-bootstrap';\nimport Dashboard from '../components/dashboard';\n\n// Example tasks with start/end dates\n// Adjust these to match your actual sprints, tasks, etc.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks = [{\n  id: 1,\n  name: 'SCRUM M1 - Find Deadline',\n  status: 'DONE',\n  start: '2025-03-27',\n  end: '2025-03-28'\n}, {\n  id: 2,\n  name: 'SCRUM M1 - Meeting 1',\n  status: 'IN PROGRESS',\n  start: '2025-03-28',\n  end: '2025-04-01'\n}, {\n  id: 3,\n  name: 'SCRUM M2 - Meeting 2',\n  status: 'IN PROGRESS',\n  start: '2025-04-02',\n  end: '2025-04-05'\n}, {\n  id: 4,\n  name: 'SCRUM M2 - Meeting 1 date change',\n  status: 'TO DO',\n  start: '2025-04-06',\n  end: '2025-04-07'\n}, {\n  id: 5,\n  name: 'SCRUM M3 - Meeting 1',\n  status: 'TO DO',\n  start: '2025-04-09',\n  end: '2025-04-10'\n}];\n\n// Define the timeline range (day-by-day)\nconst startDate = new Date('2025-03-27'); // adjust as needed\nconst endDate = new Date('2025-04-15'); // adjust as needed\n\n// Generate an array of dates (one per day) from startDate to endDate inclusive\nfunction generateDateRange(start, end) {\n  const dateArray = [];\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    dateArray.push(new Date(currentDate));\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n  return dateArray;\n}\nconst dateRange = generateDateRange(startDate, endDate);\n\n// Helper to check if a given date is within a task’s start/end range\nfunction isWithinRange(date, start, end) {\n  return date >= start && date <= end;\n}\n\n// Helper to parse a date string (YYYY-MM-DD) into a JS Date\nfunction parseDate(str) {\n  return new Date(str + 'T00:00:00'); // ensures no timezone offset\n}\n\n// Color logic for statuses (customize as needed)\nfunction getStatusColor(status) {\n  switch (status) {\n    case 'DONE':\n      return '#4caf50';\n    // green\n    case 'IN PROGRESS':\n      return '#2196f3';\n    // blue\n    case 'TO DO':\n      return '#ff9800';\n    // orange\n    default:\n      return '#999';\n    // fallback grey\n  }\n}\nexport default function TimelinePage() {\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Timeline Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '250px'\n              },\n              children: \"Sprint / Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '100px'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), dateRange.map(date => {\n              const day = date.getDate();\n              const month = date.getMonth() + 1; // zero-based\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: [day, \"/\", month]\n              }, date.toISOString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map(task => {\n            const start = parseDate(task.start);\n            const end = parseDate(task.end);\n            const bgColor = getStatusColor(task.status);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"\",\n                  style: {\n                    backgroundColor: bgColor,\n                    color: '#fff',\n                    fontWeight: 'normal'\n                  },\n                  children: task.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), dateRange.map(date => {\n                // If this date is within the task’s start/end, highlight it\n                const inRange = isWithinRange(date, start, end);\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    backgroundColor: inRange ? bgColor : 'transparent',\n                    opacity: inRange ? 0.6 : 1,\n                    transition: 'background-color 0.3s'\n                  }\n                }, date.toISOString(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_c = TimelinePage;\nvar _c;\n$RefreshReg$(_c, \"TimelinePage\");","map":{"version":3,"names":["React","Container","Table","Badge","Dashboard","jsxDEV","_jsxDEV","tasks","id","name","status","start","end","startDate","Date","endDate","generateDateRange","dateArray","currentDate","push","setDate","getDate","dateRange","isWithinRange","date","parseDate","str","getStatusColor","TimelinePage","children","fluid","className","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","responsive","style","minWidth","map","day","month","getMonth","toISOString","task","bgColor","bg","backgroundColor","color","fontWeight","inRange","opacity","transition","_c","$RefreshReg$"],"sources":["C:/Uni Assignments/L6/S2/AgileTeamDev/AgileTeamDev/frontend/nestcafe/src/pages/timeline.js"],"sourcesContent":["import React from 'react';\r\nimport { Container, Table, Badge } from 'react-bootstrap';\r\nimport Dashboard from '../components/dashboard';\r\n\r\n// Example tasks with start/end dates\r\n// Adjust these to match your actual sprints, tasks, etc.\r\nconst tasks = [\r\n  {\r\n    id: 1,\r\n    name: 'SCRUM M1 - Find Deadline',\r\n    status: 'DONE',\r\n    start: '2025-03-27',\r\n    end: '2025-03-28',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'SCRUM M1 - Meeting 1',\r\n    status: 'IN PROGRESS',\r\n    start: '2025-03-28',\r\n    end: '2025-04-01',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'SCRUM M2 - Meeting 2',\r\n    status: 'IN PROGRESS',\r\n    start: '2025-04-02',\r\n    end: '2025-04-05',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'SCRUM M2 - Meeting 1 date change',\r\n    status: 'TO DO',\r\n    start: '2025-04-06',\r\n    end: '2025-04-07',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'SCRUM M3 - Meeting 1',\r\n    status: 'TO DO',\r\n    start: '2025-04-09',\r\n    end: '2025-04-10',\r\n  },\r\n];\r\n\r\n// Define the timeline range (day-by-day)\r\nconst startDate = new Date('2025-03-27'); // adjust as needed\r\nconst endDate = new Date('2025-04-15');   // adjust as needed\r\n\r\n// Generate an array of dates (one per day) from startDate to endDate inclusive\r\nfunction generateDateRange(start, end) {\r\n  const dateArray = [];\r\n  let currentDate = new Date(start);\r\n  while (currentDate <= end) {\r\n    dateArray.push(new Date(currentDate));\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n  return dateArray;\r\n}\r\n\r\nconst dateRange = generateDateRange(startDate, endDate);\r\n\r\n// Helper to check if a given date is within a task’s start/end range\r\nfunction isWithinRange(date, start, end) {\r\n  return date >= start && date <= end;\r\n}\r\n\r\n// Helper to parse a date string (YYYY-MM-DD) into a JS Date\r\nfunction parseDate(str) {\r\n  return new Date(str + 'T00:00:00'); // ensures no timezone offset\r\n}\r\n\r\n// Color logic for statuses (customize as needed)\r\nfunction getStatusColor(status) {\r\n  switch (status) {\r\n    case 'DONE':\r\n      return '#4caf50'; // green\r\n    case 'IN PROGRESS':\r\n      return '#2196f3'; // blue\r\n    case 'TO DO':\r\n      return '#ff9800'; // orange\r\n    default:\r\n      return '#999';    // fallback grey\r\n  }\r\n}\r\n\r\nexport default function TimelinePage() {\r\n  return (\r\n    <Dashboard>\r\n      <Container fluid className=\"p-4\">\r\n        <h2 className=\"mb-4\">Timeline Page</h2>\r\n\r\n        <Table bordered hover responsive>\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              {/* Left columns for the Task name and Status */}\r\n              <th style={{ minWidth: '250px' }}>Sprint / Task</th>\r\n              <th style={{ minWidth: '100px' }}>Status</th>\r\n\r\n              {/* One column per day in our dateRange */}\r\n              {dateRange.map((date) => {\r\n                const day = date.getDate();\r\n                const month = date.getMonth() + 1; // zero-based\r\n                return (\r\n                  <th key={date.toISOString()} className=\"text-center\">\r\n                    {day}/{month}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tasks.map((task) => {\r\n              const start = parseDate(task.start);\r\n              const end = parseDate(task.end);\r\n              const bgColor = getStatusColor(task.status);\r\n\r\n              return (\r\n                <tr key={task.id}>\r\n                  {/* Task Name */}\r\n                  <td>{task.name}</td>\r\n\r\n                  {/* Status (with a badge) */}\r\n                  <td>\r\n                    <Badge\r\n                      bg=\"\"\r\n                      style={{\r\n                        backgroundColor: bgColor,\r\n                        color: '#fff',\r\n                        fontWeight: 'normal',\r\n                      }}\r\n                    >\r\n                      {task.status}\r\n                    </Badge>\r\n                  </td>\r\n\r\n                  {/* Day-by-day columns */}\r\n                  {dateRange.map((date) => {\r\n                    // If this date is within the task’s start/end, highlight it\r\n                    const inRange = isWithinRange(date, start, end);\r\n                    return (\r\n                      <td\r\n                        key={date.toISOString()}\r\n                        style={{\r\n                          backgroundColor: inRange ? bgColor : 'transparent',\r\n                          opacity: inRange ? 0.6 : 1,\r\n                          transition: 'background-color 0.3s',\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </Dashboard>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}