{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Documents\\\\22001064 - COM070 - Element 011\\\\Repo\\\\AgileTeamDev\\\\Frontend\\\\nestcafe\\\\src\\\\pages\\\\timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Table, Modal, Form, Button } from 'react-bootstrap';\nimport Dashboard from '../components/dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  fetch('http://localhost:8000/tasks/').then(res => res.json()).then(data => setTasks(data.filter(task => task.start && task.end).map(t => ({\n    id: t.id,\n    name: t.task,\n    start: t.dueDate || t.start,\n    // fallback if backend uses 'dueDate'\n    end: t.end || t.dueDate,\n    status: t.status.toUpperCase()\n  }))));\n}, []);\n\n// Define the timeline range (day-by-day)\nconst startDate = new Date('2025-03-27');\nconst endDate = new Date('2025-04-15');\n\n// Generate an array of dates (one per day) from startDate to endDate inclusive\nfunction generateDateRange(start, end) {\n  const dateArray = [];\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    dateArray.push(new Date(currentDate));\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n  return dateArray;\n}\nconst dateRange = generateDateRange(startDate, endDate);\n\n// Helper to check if a given date is within an event’s start/end range\nfunction isWithinRange(date, start, end) {\n  return date >= start && date <= end;\n}\n\n// Helper to parse a date string (YYYY-MM-DD) into a JS Date\nfunction parseDate(str) {\n  return new Date(str + 'T00:00:00'); // ensures no timezone offset\n}\n\n// Color logic for statuses\nfunction getStatusColor(status) {\n  switch (status) {\n    case 'DONE':\n      return '#4caf50';\n    // green\n    case 'IN PROGRESS':\n      return '#2196f3';\n    // blue\n    case 'TO DO':\n      return '#999';\n    // orange\n    default:\n      return '#999';\n    // fallback grey\n  }\n}\nexport default function TimelinePage() {\n  _s();\n  // Manage timeline events in state\n  const [tasks, setTasks] = useState(initialTasks);\n  const [showModal, setShowModal] = useState(false);\n  // New event form – note no status field here (defaults to \"TO DO\")\n  const [newTask, setNewTask] = useState({\n    name: '',\n    start: '',\n    end: ''\n  });\n\n  // Open and close the modal\n  const openModal = () => setShowModal(true);\n  const closeModal = () => {\n    setShowModal(false);\n    setNewTask({\n      name: '',\n      start: '',\n      end: ''\n    });\n  };\n\n  // Handle modal input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Add a new timeline event (defaults status to \"TO DO\")\n  const addTask = () => {\n    const newId = tasks.length ? tasks[tasks.length - 1].id + 1 : 1;\n    setTasks([...tasks, {\n      id: newId,\n      ...newTask,\n      status: 'TO DO'\n    }]);\n    closeModal();\n  };\n\n  // Allow status changes for existing events\n  const handleStatusChange = (id, newStatus) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      status: newStatus\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Timeline Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: openModal,\n        className: \"mb-3\",\n        children: \"Add Timeline Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '250px'\n              },\n              children: \"Sprint / Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '100px'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), dateRange.map(date => {\n              const day = date.getDate();\n              const month = date.getMonth() + 1;\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: [day, \"/\", month]\n              }, date.toISOString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map(task => {\n            const start = parseDate(task.start);\n            const end = parseDate(task.end);\n            const bgColor = getStatusColor(task.status);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: task.status,\n                  onChange: e => handleStatusChange(task.id, e.target.value),\n                  style: {\n                    backgroundColor: bgColor,\n                    color: '#fff',\n                    fontWeight: 'normal'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"TO DO\",\n                    style: {\n                      backgroundColor: '#ff9800',\n                      color: '#fff'\n                    },\n                    children: \"TO DO\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"IN PROGRESS\",\n                    style: {\n                      backgroundColor: '#2196f3',\n                      color: '#fff'\n                    },\n                    children: \"IN PROGRESS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DONE\",\n                    style: {\n                      backgroundColor: '#4caf50',\n                      color: '#fff'\n                    },\n                    children: \"DONE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), dateRange.map(date => {\n                const inRange = isWithinRange(date, start, end);\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    backgroundColor: inRange ? bgColor : 'transparent',\n                    opacity: inRange ? 0.6 : 1,\n                    transition: 'background-color 0.3s'\n                  }\n                }, date.toISOString(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Timeline Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEventName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Event Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter event name\",\n              name: \"name\",\n              value: newTask.name,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formStartDate\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"start\",\n              value: newTask.start,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEndDate\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"end\",\n              value: newTask.end,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"New events are marked as \\\"TO DO\\\" by default.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: addTask,\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(TimelinePage, \"0Q+fsXCeHzXFOs9E7hHIhJ+myDI=\");\n_c = TimelinePage;\nvar _c;\n$RefreshReg$(_c, \"TimelinePage\");","map":{"version":3,"names":["React","useState","Container","Table","Modal","Form","Button","Dashboard","jsxDEV","_jsxDEV","useEffect","fetch","then","res","json","data","setTasks","filter","task","start","end","map","t","id","name","dueDate","status","toUpperCase","startDate","Date","endDate","generateDateRange","dateArray","currentDate","push","setDate","getDate","dateRange","isWithinRange","date","parseDate","str","getStatusColor","TimelinePage","_s","tasks","initialTasks","showModal","setShowModal","newTask","setNewTask","openModal","closeModal","handleChange","e","value","target","prev","addTask","newId","length","handleStatusChange","newStatus","children","fluid","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","bordered","hover","responsive","style","minWidth","day","month","getMonth","toISOString","bgColor","Select","onChange","backgroundColor","color","fontWeight","inRange","opacity","transition","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","placeholder","Footer","_c","$RefreshReg$"],"sources":["C:/Users/ethan/OneDrive/Documents/22001064 - COM070 - Element 011/Repo/AgileTeamDev/Frontend/nestcafe/src/pages/timeline.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Table, Modal, Form, Button } from 'react-bootstrap';\r\nimport Dashboard from '../components/dashboard';\r\n\r\nuseEffect(() => {\r\n  fetch('http://localhost:8000/tasks/')\r\n    .then(res => res.json())\r\n    .then(data => setTasks(\r\n      data.filter(task => task.start && task.end).map(t => ({\r\n        id: t.id,\r\n        name: t.task,\r\n        start: t.dueDate || t.start, // fallback if backend uses 'dueDate'\r\n        end: t.end || t.dueDate,\r\n        status: t.status.toUpperCase()\r\n      }))\r\n    ));\r\n}, []);\r\n\r\n// Define the timeline range (day-by-day)\r\nconst startDate = new Date('2025-03-27');\r\nconst endDate = new Date('2025-04-15');\r\n\r\n// Generate an array of dates (one per day) from startDate to endDate inclusive\r\nfunction generateDateRange(start, end) {\r\n  const dateArray = [];\r\n  let currentDate = new Date(start);\r\n  while (currentDate <= end) {\r\n    dateArray.push(new Date(currentDate));\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n  return dateArray;\r\n}\r\n\r\nconst dateRange = generateDateRange(startDate, endDate);\r\n\r\n// Helper to check if a given date is within an event’s start/end range\r\nfunction isWithinRange(date, start, end) {\r\n  return date >= start && date <= end;\r\n}\r\n\r\n// Helper to parse a date string (YYYY-MM-DD) into a JS Date\r\nfunction parseDate(str) {\r\n  return new Date(str + 'T00:00:00'); // ensures no timezone offset\r\n}\r\n\r\n// Color logic for statuses\r\nfunction getStatusColor(status) {\r\n  switch (status) {\r\n    case 'DONE':\r\n      return '#4caf50'; // green\r\n    case 'IN PROGRESS':\r\n      return '#2196f3'; // blue\r\n    case 'TO DO':\r\n      return '#999'; // orange\r\n    default:\r\n      return '#999';    // fallback grey\r\n  }\r\n}\r\n\r\nexport default function TimelinePage() {\r\n  // Manage timeline events in state\r\n  const [tasks, setTasks] = useState(initialTasks);\r\n  const [showModal, setShowModal] = useState(false);\r\n  // New event form – note no status field here (defaults to \"TO DO\")\r\n  const [newTask, setNewTask] = useState({ name: '', start: '', end: '' });\r\n\r\n  // Open and close the modal\r\n  const openModal = () => setShowModal(true);\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setNewTask({ name: '', start: '', end: '' });\r\n  };\r\n\r\n  // Handle modal input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTask((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Add a new timeline event (defaults status to \"TO DO\")\r\n  const addTask = () => {\r\n    const newId = tasks.length ? tasks[tasks.length - 1].id + 1 : 1;\r\n    setTasks([...tasks, { id: newId, ...newTask, status: 'TO DO' }]);\r\n    closeModal();\r\n  };\r\n\r\n  // Allow status changes for existing events\r\n  const handleStatusChange = (id, newStatus) => {\r\n    setTasks(tasks.map(task => task.id === id ? { ...task, status: newStatus } : task));\r\n  };\r\n\r\n  return (\r\n    <Dashboard>\r\n      <Container fluid className=\"p-4\">\r\n        <h2 className=\"mb-4\">Timeline Page</h2>\r\n        <Button variant=\"primary\" onClick={openModal} className=\"mb-3\">\r\n          Add Timeline Event\r\n        </Button>\r\n        <Table bordered hover responsive>\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              {/* Fixed columns for Task name and Status */}\r\n              <th style={{ minWidth: '250px' }}>Sprint / Task</th>\r\n              <th style={{ minWidth: '100px' }}>Status</th>\r\n\r\n              {/* One column per day */}\r\n              {dateRange.map((date) => {\r\n                const day = date.getDate();\r\n                const month = date.getMonth() + 1;\r\n                return (\r\n                  <th key={date.toISOString()} className=\"text-center\">\r\n                    {day}/{month}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tasks.map((task) => {\r\n              const start = parseDate(task.start);\r\n              const end = parseDate(task.end);\r\n              const bgColor = getStatusColor(task.status);\r\n\r\n              return (\r\n                <tr key={task.id}>\r\n                  {/* Task Name */}\r\n                  <td>{task.name}</td>\r\n\r\n                  {/* Status with editable dropdown styled as a colored badge */}\r\n                  <td>\r\n                  <Form.Select\r\n                      value={task.status}\r\n                      onChange={(e) => handleStatusChange(task.id, e.target.value)}\r\n                      style={{\r\n                        backgroundColor: bgColor,\r\n                        color: '#fff',\r\n                        fontWeight: 'normal',\r\n                      }}\r\n                    >\r\n                      <option value=\"TO DO\" style={{ backgroundColor: '#ff9800', color: '#fff' }}>\r\n                        TO DO\r\n                      </option>\r\n                      <option value=\"IN PROGRESS\" style={{ backgroundColor: '#2196f3', color: '#fff' }}>\r\n                        IN PROGRESS\r\n                      </option>\r\n                      <option value=\"DONE\" style={{ backgroundColor: '#4caf50', color: '#fff' }}>\r\n                        DONE\r\n                      </option>\r\n                    </Form.Select>\r\n                  </td>\r\n\r\n                  {/* Timeline grid: color cells if date is within the event’s range */}\r\n                  {dateRange.map((date) => {\r\n                    const inRange = isWithinRange(date, start, end);\r\n                    return (\r\n                      <td\r\n                        key={date.toISOString()}\r\n                        style={{\r\n                          backgroundColor: inRange ? bgColor : 'transparent',\r\n                          opacity: inRange ? 0.6 : 1,\r\n                          transition: 'background-color 0.3s',\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n\r\n      {/* Modal for adding a timeline event */}\r\n      <Modal show={showModal} onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Timeline Event</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formEventName\" className=\"mb-3\">\r\n              <Form.Label>Event Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter event name\"\r\n                name=\"name\"\r\n                value={newTask.name}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formStartDate\" className=\"mb-3\">\r\n              <Form.Label>Start Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"start\"\r\n                value={newTask.start}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formEndDate\" className=\"mb-3\">\r\n              <Form.Label>End Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"end\"\r\n                value={newTask.end}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <p className=\"text-muted\">New events are marked as \"TO DO\" by default.</p>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={addTask}>\r\n            Add Event\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Dashboard>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}