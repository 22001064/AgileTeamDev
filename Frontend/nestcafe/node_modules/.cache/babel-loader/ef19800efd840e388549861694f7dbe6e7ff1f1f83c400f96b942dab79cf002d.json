{"ast":null,"code":"var _jsxFileName = \"C:\\\\Uni Assignments\\\\L6\\\\S2\\\\AgileTeamDev\\\\AgileTeamDev\\\\frontend\\\\nestcafe\\\\src\\\\pages\\\\timeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Table, Badge, Modal, Form, Button } from 'react-bootstrap';\nimport Dashboard from '../components/dashboard';\n\n// Initial timeline events\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 1,\n  name: 'SCRUM M1 - Find Deadline',\n  status: 'DONE',\n  start: '2025-03-27',\n  end: '2025-03-28'\n}, {\n  id: 2,\n  name: 'SCRUM M1 - Meeting 1',\n  status: 'IN PROGRESS',\n  start: '2025-03-28',\n  end: '2025-04-01'\n}, {\n  id: 3,\n  name: 'SCRUM M2 - Meeting 2',\n  status: 'IN PROGRESS',\n  start: '2025-04-02',\n  end: '2025-04-05'\n}, {\n  id: 4,\n  name: 'SCRUM M2 - Meeting 1 date change',\n  status: 'TO DO',\n  start: '2025-04-06',\n  end: '2025-04-07'\n}, {\n  id: 5,\n  name: 'SCRUM M3 - Meeting 1',\n  status: 'TO DO',\n  start: '2025-04-09',\n  end: '2025-04-10'\n}];\n\n// Define the timeline range (day-by-day)\nconst startDate = new Date('2025-03-27');\nconst endDate = new Date('2025-04-15');\n\n// Generate an array of dates (one per day) from startDate to endDate inclusive\nfunction generateDateRange(start, end) {\n  const dateArray = [];\n  let currentDate = new Date(start);\n  while (currentDate <= end) {\n    dateArray.push(new Date(currentDate));\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n  return dateArray;\n}\nconst dateRange = generateDateRange(startDate, endDate);\n\n// Helper to check if a given date is within an eventâ€™s start/end range\nfunction isWithinRange(date, start, end) {\n  return date >= start && date <= end;\n}\n\n// Helper to parse a date string (YYYY-MM-DD) into a JS Date\nfunction parseDate(str) {\n  return new Date(str + 'T00:00:00'); // ensures no timezone offset\n}\n\n// Color logic for statuses (customize as needed)\nfunction getStatusColor(status) {\n  switch (status) {\n    case 'DONE':\n      return '#4caf50';\n    // green\n    case 'IN PROGRESS':\n      return '#2196f3';\n    // blue\n    case 'TO DO':\n      return '#ff9800';\n    // orange\n    default:\n      return '#999';\n    // fallback grey\n  }\n}\nexport default function TimelinePage() {\n  _s();\n  // Manage timeline events as state\n  const [tasks, setTasks] = useState(initialTasks);\n  const [showModal, setShowModal] = useState(false);\n  const [newTask, setNewTask] = useState({\n    name: '',\n    status: 'TO DO',\n    start: '',\n    end: ''\n  });\n\n  // Open and close modal\n  const openModal = () => setShowModal(true);\n  const closeModal = () => {\n    setShowModal(false);\n    setNewTask({\n      name: '',\n      status: 'TO DO',\n      start: '',\n      end: ''\n    });\n  };\n\n  // Handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Add a new timeline event to state\n  const addTask = () => {\n    const newId = tasks.length ? tasks[tasks.length - 1].id + 1 : 1;\n    setTasks([...tasks, {\n      id: newId,\n      ...newTask\n    }]);\n    closeModal();\n  };\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Timeline Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: openModal,\n        className: \"mb-3\",\n        children: \"Add Timeline Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '250px'\n              },\n              children: \"Sprint / Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '100px'\n              },\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), dateRange.map(date => {\n              const day = date.getDate();\n              const month = date.getMonth() + 1; // zero-based\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: [day, \"/\", month]\n              }, date.toISOString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map(task => {\n            const start = parseDate(task.start);\n            const end = parseDate(task.end);\n            const bgColor = getStatusColor(task.status);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  style: {\n                    backgroundColor: bgColor,\n                    color: '#fff',\n                    fontWeight: 'normal'\n                  },\n                  children: task.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this), dateRange.map(date => {\n                const inRange = isWithinRange(date, start, end);\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    backgroundColor: inRange ? bgColor : 'transparent',\n                    opacity: inRange ? 0.6 : 1,\n                    transition: 'background-color 0.3s'\n                  }\n                }, date.toISOString(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Timeline Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEventName\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Event Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter event name\",\n              name: \"name\",\n              value: newTask.name,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEventStatus\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"status\",\n              value: newTask.status,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DONE\",\n                children: \"DONE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"IN PROGRESS\",\n                children: \"IN PROGRESS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"TO DO\",\n                children: \"TO DO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formStartDate\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"start\",\n              value: newTask.start,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formEndDate\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"end\",\n              value: newTask.end,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: addTask,\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(TimelinePage, \"V+udtBA5hwIHLpocBjiDXAqTdYc=\");\n_c = TimelinePage;\nvar _c;\n$RefreshReg$(_c, \"TimelinePage\");","map":{"version":3,"names":["React","useState","Container","Table","Badge","Modal","Form","Button","Dashboard","jsxDEV","_jsxDEV","initialTasks","id","name","status","start","end","startDate","Date","endDate","generateDateRange","dateArray","currentDate","push","setDate","getDate","dateRange","isWithinRange","date","parseDate","str","getStatusColor","TimelinePage","_s","tasks","setTasks","showModal","setShowModal","newTask","setNewTask","openModal","closeModal","handleChange","e","value","target","prev","addTask","newId","length","children","fluid","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","bordered","hover","responsive","style","minWidth","map","day","month","getMonth","toISOString","task","bgColor","backgroundColor","color","fontWeight","inRange","opacity","transition","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","placeholder","onChange","Select","Footer","_c","$RefreshReg$"],"sources":["C:/Uni Assignments/L6/S2/AgileTeamDev/AgileTeamDev/frontend/nestcafe/src/pages/timeline.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Table, Badge, Modal, Form, Button } from 'react-bootstrap';\r\nimport Dashboard from '../components/dashboard';\r\n\r\n// Initial timeline events\r\nconst initialTasks = [\r\n  {\r\n    id: 1,\r\n    name: 'SCRUM M1 - Find Deadline',\r\n    status: 'DONE',\r\n    start: '2025-03-27',\r\n    end: '2025-03-28',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'SCRUM M1 - Meeting 1',\r\n    status: 'IN PROGRESS',\r\n    start: '2025-03-28',\r\n    end: '2025-04-01',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'SCRUM M2 - Meeting 2',\r\n    status: 'IN PROGRESS',\r\n    start: '2025-04-02',\r\n    end: '2025-04-05',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'SCRUM M2 - Meeting 1 date change',\r\n    status: 'TO DO',\r\n    start: '2025-04-06',\r\n    end: '2025-04-07',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'SCRUM M3 - Meeting 1',\r\n    status: 'TO DO',\r\n    start: '2025-04-09',\r\n    end: '2025-04-10',\r\n  },\r\n];\r\n\r\n// Define the timeline range (day-by-day)\r\nconst startDate = new Date('2025-03-27');\r\nconst endDate = new Date('2025-04-15');\r\n\r\n// Generate an array of dates (one per day) from startDate to endDate inclusive\r\nfunction generateDateRange(start, end) {\r\n  const dateArray = [];\r\n  let currentDate = new Date(start);\r\n  while (currentDate <= end) {\r\n    dateArray.push(new Date(currentDate));\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n  return dateArray;\r\n}\r\n\r\nconst dateRange = generateDateRange(startDate, endDate);\r\n\r\n// Helper to check if a given date is within an eventâ€™s start/end range\r\nfunction isWithinRange(date, start, end) {\r\n  return date >= start && date <= end;\r\n}\r\n\r\n// Helper to parse a date string (YYYY-MM-DD) into a JS Date\r\nfunction parseDate(str) {\r\n  return new Date(str + 'T00:00:00'); // ensures no timezone offset\r\n}\r\n\r\n// Color logic for statuses (customize as needed)\r\nfunction getStatusColor(status) {\r\n  switch (status) {\r\n    case 'DONE':\r\n      return '#4caf50'; // green\r\n    case 'IN PROGRESS':\r\n      return '#2196f3'; // blue\r\n    case 'TO DO':\r\n      return '#ff9800'; // orange\r\n    default:\r\n      return '#999';    // fallback grey\r\n  }\r\n}\r\n\r\nexport default function TimelinePage() {\r\n  // Manage timeline events as state\r\n  const [tasks, setTasks] = useState(initialTasks);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [newTask, setNewTask] = useState({ name: '', status: 'TO DO', start: '', end: '' });\r\n\r\n  // Open and close modal\r\n  const openModal = () => setShowModal(true);\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setNewTask({ name: '', status: 'TO DO', start: '', end: '' });\r\n  };\r\n\r\n  // Handle form field changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTask((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Add a new timeline event to state\r\n  const addTask = () => {\r\n    const newId = tasks.length ? tasks[tasks.length - 1].id + 1 : 1;\r\n    setTasks([...tasks, { id: newId, ...newTask }]);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Dashboard>\r\n      <Container fluid className=\"p-4\">\r\n        <h2 className=\"mb-4\">Timeline Page</h2>\r\n        <Button variant=\"primary\" onClick={openModal} className=\"mb-3\">\r\n          Add Timeline Event\r\n        </Button>\r\n        <Table bordered hover responsive>\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              {/* Left columns for the Task name and Status */}\r\n              <th style={{ minWidth: '250px' }}>Sprint / Task</th>\r\n              <th style={{ minWidth: '100px' }}>Status</th>\r\n              {/* One column per day in our dateRange */}\r\n              {dateRange.map((date) => {\r\n                const day = date.getDate();\r\n                const month = date.getMonth() + 1; // zero-based\r\n                return (\r\n                  <th key={date.toISOString()} className=\"text-center\">\r\n                    {day}/{month}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tasks.map((task) => {\r\n              const start = parseDate(task.start);\r\n              const end = parseDate(task.end);\r\n              const bgColor = getStatusColor(task.status);\r\n              return (\r\n                <tr key={task.id}>\r\n                  {/* Task Name */}\r\n                  <td>{task.name}</td>\r\n                  {/* Status (with a badge) */}\r\n                  <td>\r\n                    <Badge\r\n                      style={{\r\n                        backgroundColor: bgColor,\r\n                        color: '#fff',\r\n                        fontWeight: 'normal',\r\n                      }}\r\n                    >\r\n                      {task.status}\r\n                    </Badge>\r\n                  </td>\r\n                  {/* Day-by-day columns */}\r\n                  {dateRange.map((date) => {\r\n                    const inRange = isWithinRange(date, start, end);\r\n                    return (\r\n                      <td\r\n                        key={date.toISOString()}\r\n                        style={{\r\n                          backgroundColor: inRange ? bgColor : 'transparent',\r\n                          opacity: inRange ? 0.6 : 1,\r\n                          transition: 'background-color 0.3s',\r\n                        }}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n\r\n      {/* Modal for adding a timeline event */}\r\n      <Modal show={showModal} onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Timeline Event</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formEventName\" className=\"mb-3\">\r\n              <Form.Label>Event Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter event name\"\r\n                name=\"name\"\r\n                value={newTask.name}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formEventStatus\" className=\"mb-3\">\r\n              <Form.Label>Status</Form.Label>\r\n              <Form.Select name=\"status\" value={newTask.status} onChange={handleChange}>\r\n                <option value=\"DONE\">DONE</option>\r\n                <option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n                <option value=\"TO DO\">TO DO</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formStartDate\" className=\"mb-3\">\r\n              <Form.Label>Start Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"start\"\r\n                value={newTask.start}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formEndDate\" className=\"mb-3\">\r\n              <Form.Label>End Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"end\"\r\n                value={newTask.end}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={addTask}>\r\n            Add Event\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Dashboard>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}