{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\OneDrive\\\\Documents\\\\22001064 - COM070 - Element 011\\\\Repo\\\\AgileTeamDev\\\\Frontend\\\\nestcafe\\\\src\\\\pages\\\\backlogUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Table, Modal, Form, Button, Badge } from 'react-bootstrap';\nimport Dashboard from '../components/dashboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BacklogUser = () => {\n  _s();\n  // Initial dummy tasks (existing tasks may have varied statuses)\n  const [tasks, setTasks] = useState([]);\n\n  // Modal state for adding a new task\n  const [showModal, setShowModal] = useState(false);\n  // New task state: no status field because new tasks default to \"To Do\"\n  const [newTask, setNewTask] = useState({\n    task: '',\n    assignee: '',\n    priority: 'Low',\n    dueDate: ''\n  });\n  // State for editing an existing task (if needed)\n  const [editingTaskId, setEditingTaskId] = useState(null);\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    fetch('http://localhost:8000/tasks/').then(response => response.json()).then(data => setTasks(data));\n  }, []);\n\n  // Open the modal for adding a new task\n  // Reset the new task state and close the modal\n  const openAddTaskModal = () => {\n    setNewTask({\n      task: '',\n      assignee: '',\n      priority: 'Low',\n      dueDate: '',\n      status: 'To Do'\n    });\n    setEditingTaskId(null);\n    setShowModal(true);\n  };\n\n  // Handle modal field changes\n  const handleModalChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle adding a new task or updating an existing one\n  const handleAddTask = () => {\n    const url = editingTaskId ? `http://localhost:8000/tasks/${editingTaskId}/` : 'http://localhost:8000/tasks/';\n    const method = editingTaskId ? 'PUT' : 'POST';\n    fetch(url, {\n      method,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    }).then(res => res.json()).then(data => {\n      if (editingTaskId) {\n        setTasks(prev => prev.map(t => t.id === editingTaskId ? {\n          ...newTask,\n          id: t.id\n        } : t));\n      } else {\n        setTasks(prev => [...prev, {\n          ...newTask,\n          id: data.id\n        }]);\n      }\n      setNewTask({\n        task: '',\n        assignee: '',\n        priority: 'Low',\n        dueDate: '',\n        status: 'To Do'\n      });\n      setEditingTaskId(null);\n      setShowModal(false);\n    });\n  };\n\n  // Handle editing an existing task (opens the modal with task data)\n  const handleEditTask = task => {\n    setNewTask(task);\n    setEditingTaskId(task.id);\n    setShowModal(true);\n  };\n\n  // Allow status changes for existing tasks\n  const handleStatusChange = (id, newStatus) => {\n    const updatedTask = tasks.find(t => t.id === id);\n    fetch(`http://localhost:8000/tasks/${id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...updatedTask,\n        status: newStatus\n      })\n    }).then(res => res.json()).then(() => {\n      setTasks(tasks.map(task => task.id === id ? {\n        ...task,\n        status: newStatus\n      } : task));\n    });\n  };\n\n  // Returns a background color based on the status\n  function getStatusColor(status) {\n    switch (status) {\n      case 'To Do':\n        return '#999';\n      // orange\n      case 'In Progress':\n        return '#36a2eb';\n      // blue\n      case 'Complete':\n        return '#4caf50';\n      // green\n      default:\n        return '#999';\n      // fallback grey\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n      onAddTask: openAddTaskModal,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"User Backlog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task & Assignee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: `TSK ${task.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: task.task\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1\",\n                  children: /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: \"info\",\n                    children: task.assignee\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: task.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: task.dueDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: task.status,\n                  onChange: e => handleStatusChange(task.id, e.target.value),\n                  style: {\n                    backgroundColor: getStatusColor(task.status),\n                    color: '#fff',\n                    fontWeight: 'bold',\n                    border: 'none'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"To Do\",\n                    style: {\n                      backgroundColor: '#999',\n                      color: '#fff'\n                    },\n                    children: \"To Do\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"In Progress\",\n                    style: {\n                      backgroundColor: '#36a2eb',\n                      color: '#fff'\n                    },\n                    children: \"In Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Complete\",\n                    style: {\n                      backgroundColor: '#4caf50',\n                      color: '#fff'\n                    },\n                    children: \"Complete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formTaskDescription\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Task Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter task description\",\n              name: \"task\",\n              value: newTask.task,\n              onChange: handleModalChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formAssignee\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Assignee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter assignee name\",\n              name: \"assignee\",\n              value: newTask.assignee,\n              onChange: handleModalChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formPriority\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"priority\",\n              value: newTask.priority,\n              onChange: handleModalChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formDueDate\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              name: \"dueDate\",\n              value: newTask.dueDate,\n              onChange: handleModalChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"New tasks are marked as \\\"To Do\\\" by default.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleAddTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BacklogUser, \"PfJBnwJzBzfdCMSJYrqD7t8oxB0=\");\n_c = BacklogUser;\nexport default BacklogUser;\nvar _c;\n$RefreshReg$(_c, \"BacklogUser\");","map":{"version":3,"names":["React","useState","useEffect","Container","Table","Modal","Form","Button","Badge","Dashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","BacklogUser","_s","tasks","setTasks","showModal","setShowModal","newTask","setNewTask","task","assignee","priority","dueDate","editingTaskId","setEditingTaskId","fetch","then","response","json","data","openAddTaskModal","status","handleModalChange","e","name","value","target","prev","handleAddTask","url","method","headers","body","JSON","stringify","res","map","t","id","handleEditTask","handleStatusChange","newStatus","updatedTask","find","getStatusColor","children","onAddTask","fluid","className","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","bg","Select","onChange","style","backgroundColor","color","fontWeight","border","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","placeholder","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ethan/OneDrive/Documents/22001064 - COM070 - Element 011/Repo/AgileTeamDev/Frontend/nestcafe/src/pages/backlogUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Table, Modal, Form, Button, Badge } from 'react-bootstrap';\r\nimport Dashboard from '../components/dashboard';\r\n\r\nconst BacklogUser = () => {\r\n  // Initial dummy tasks (existing tasks may have varied statuses)\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Modal state for adding a new task\r\n  const [showModal, setShowModal] = useState(false);\r\n  // New task state: no status field because new tasks default to \"To Do\"\r\n  const [newTask, setNewTask] = useState({ task: '', assignee: '', priority: 'Low', dueDate: '' });\r\n  // State for editing an existing task (if needed)\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n\r\n  // Fetch tasks from the backend\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/tasks/')\r\n      .then((response) => response.json())\r\n      .then((data) => setTasks(data));\r\n  }, []);\r\n\r\n  // Open the modal for adding a new task\r\n  // Reset the new task state and close the modal\r\n  const openAddTaskModal = () => {\r\n    setNewTask({\r\n      task: '',\r\n      assignee: '',\r\n      priority: 'Low',\r\n      dueDate: '',\r\n      status: 'To Do'\r\n    });\r\n    setEditingTaskId(null);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Handle modal field changes\r\n  const handleModalChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewTask((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle adding a new task or updating an existing one\r\n  const handleAddTask = () => {\r\n    const url = editingTaskId\r\n      ? `http://localhost:8000/tasks/${editingTaskId}/`\r\n      : 'http://localhost:8000/tasks/';\r\n    const method = editingTaskId ? 'PUT' : 'POST';\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newTask),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (editingTaskId) {\r\n          setTasks((prev) =>\r\n            prev.map((t) => (t.id === editingTaskId ? { ...newTask, id: t.id } : t))\r\n          );\r\n        } else {\r\n          setTasks((prev) => [...prev, { ...newTask, id: data.id }]);\r\n        }\r\n        setNewTask({ task: '', assignee: '', priority: 'Low', dueDate: '', status: 'To Do' });\r\n        setEditingTaskId(null);\r\n        setShowModal(false);\r\n      });\r\n  };\r\n\r\n  // Handle editing an existing task (opens the modal with task data)\r\n  const handleEditTask = (task) => {\r\n    setNewTask(task);\r\n    setEditingTaskId(task.id);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Allow status changes for existing tasks\r\n  const handleStatusChange = (id, newStatus) => {\r\n    const updatedTask = tasks.find(t => t.id === id);\r\n    fetch(`http://localhost:8000/tasks/${id}/`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...updatedTask, status: newStatus })\r\n    })\r\n      .then(res => res.json())\r\n      .then(() => {\r\n        setTasks(tasks.map(task => task.id === id ? { ...task, status: newStatus } : task));\r\n      });\r\n  };\r\n\r\n  // Returns a background color based on the status\r\n  function getStatusColor(status) {\r\n    switch (status) {\r\n      case 'To Do':\r\n        return '#999'; // orange\r\n      case 'In Progress':\r\n        return '#36a2eb'; // blue\r\n      case 'Complete':\r\n        return '#4caf50'; // green\r\n      default:\r\n        return '#999';    // fallback grey\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dashboard onAddTask={openAddTaskModal}>\r\n        <Container fluid className=\"p-4\">\r\n          <h2 className=\"mb-4\">User Backlog</h2>\r\n          <Table striped bordered hover responsive>\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Task &amp; Assignee</th>\r\n                <th>Priority</th>\r\n                <th>Due Date</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tasks.map((task) => (\r\n                <tr key={task.id}>\r\n                  {/* Task Number */}\r\n                  <td>{`TSK ${task.id}`}</td>\r\n                  \r\n                  {/* Task description and assignee */}\r\n                  <td>\r\n                    <div>{task.task}</div>\r\n                    <div className=\"mt-1\">\r\n                      <Badge bg=\"info\">{task.assignee}</Badge>\r\n                    </div>\r\n                  </td>\r\n                  \r\n                  {/* Task Priority */}\r\n                  <td>{task.priority}</td>\r\n                  \r\n                  {/* Due Date */}\r\n                  <td>{task.dueDate}</td>\r\n                  \r\n                  {/* Status cell with a styled dropdown */}\r\n                  <td>\r\n                    <Form.Select\r\n                      value={task.status}\r\n                      onChange={(e) => handleStatusChange(task.id, e.target.value)}\r\n                      style={{\r\n                        backgroundColor: getStatusColor(task.status),\r\n                        color: '#fff',\r\n                        fontWeight: 'bold',\r\n                        border: 'none'\r\n                      }}\r\n                    >\r\n                      <option value=\"To Do\" style={{ backgroundColor: '#999', color: '#fff' }}>To Do</option>\r\n                      <option value=\"In Progress\" style={{ backgroundColor: '#36a2eb', color: '#fff' }}>In Progress</option>\r\n                      <option value=\"Complete\" style={{ backgroundColor: '#4caf50', color: '#fff' }}>Complete</option>\r\n                    </Form.Select>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Dashboard>\r\n\r\n      {/* Modal for adding a new task */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New Task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formTaskDescription\" className=\"mb-3\">\r\n              <Form.Label>Task Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter task description\"\r\n                name=\"task\"\r\n                value={newTask.task}\r\n                onChange={handleModalChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formAssignee\" className=\"mb-3\">\r\n              <Form.Label>Assignee</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter assignee name\"\r\n                name=\"assignee\"\r\n                value={newTask.assignee}\r\n                onChange={handleModalChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPriority\" className=\"mb-3\">\r\n              <Form.Label>Priority</Form.Label>\r\n              <Form.Select\r\n                name=\"priority\"\r\n                value={newTask.priority}\r\n                onChange={handleModalChange}\r\n              >\r\n                <option value=\"Low\">Low</option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"High\">High</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formDueDate\" className=\"mb-3\">\r\n              <Form.Label>Due Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"dueDate\"\r\n                value={newTask.dueDate}\r\n                onChange={handleModalChange}\r\n              />\r\n            </Form.Group>\r\n            <p className=\"text-muted\">New tasks are marked as \"To Do\" by default.</p>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleAddTask}>\r\n            Add Task\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BacklogUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}